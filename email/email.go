package email

import (
	"crypto/tls"
	"fmt"
	"time"

	"github.com/mt1976/frantic-plum/common"
	"gopkg.in/gomail.v2"
)

var EMAIL_From string
var EMAIL_Footer string
var Emailer *gomail.Dialer

// The `const` block defines a set of constants used in the email package.
const (
	DATEMSG    = "2006-01-02 at 15:04:05"
	ES_FROM    = "From"
	ES_TO      = "To"
	ES_CC      = "Cc"
	ES_SUBJECT = "Subject"
	ES_TYPE    = "text/html"
)

// The function initializes and returns a gomail.Dialer object for sending emails.
func Email_init() *gomail.Dialer {
	//fmt.Println("Email Init")

	set := common.Get()

	emailService := set.EmailHost()
	emailPort := set.EmailPort()
	emailUser := set.EmailUser()
	emailPassword := set.EmailPassword()
	EMAIL_From = set.EmailFrom()
	EMAIL_Footer = set.EmailFooter()
	if EMAIL_Footer == "" {
		EMAIL_Footer = "This is an automated email. Please do not reply!"
	}
	EMAIL_Footer = EMAIL_Footer + "<br><br>--"
	EMAIL_Footer = EMAIL_Footer + fmt.Sprintf("<br><br><small><i>Generated by: %s (%s) on %s</i></small>", set.ApplicationName(), set.ApplicationHost(), time.Now().Format(DATEMSG))

	Emailer = gomail.NewDialer(emailService, emailPort, emailUser, emailPassword)
	Emailer.TLSConfig = &tls.Config{InsecureSkipVerify: true}
	return Emailer
}

// The function `SendEmail` sends an email with the specified recipient, subject, and body, using the
// `gomail` package in Go.
func SendEmail(to string, name string, subject string, body string) {

	set := common.Get()

	// The code block is creating a new email message using the `gomail` package.
	m := gomail.NewMessage()
	m.SetHeader(ES_FROM, EMAIL_From)
	m.SetHeader(ES_TO, to)
	m.SetAddressHeader(ES_CC, set.EmailAdmin(), "Admin")
	m.SetHeader(ES_SUBJECT, subject)

	MSG_BODY := name + ",<br><br>" + body + "<br><br>" + EMAIL_Footer
	m.SetBody(ES_TYPE, MSG_BODY)

	// Send the email to Bob, Cora and Dan.
	// This code block is sending the email using the `gomail` package.
	if err := Emailer.DialAndSend(m); err != nil {
		panic(err)
	}
}
